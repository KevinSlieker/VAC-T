@model IEnumerable<JobOffer>
@using Microsoft.AspNetCore.Identity;
@inject UserManager<VAC_TUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@inject SignInManager<VAC_TUser> SignInManager
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h1>Index</h1>*@

@if (SignInManager.IsSignedIn(User))
{ if (User.IsInRole("ROLE_EMPLOYER"))
    {
        <p>
            <a asp-action="Create">Maak een nieuwe vacature</a>
        </p>
    }
}

<div class="container-fluid">
    <div class="row">
        <div class="home-left col-3">
            <img class="rounded-circle img" src=@Url.Content("~/" + Model.First().LogoURL) height="200" width="200" alt="Logo" />
            <div class="info-joboffer-left background-color-gray text-white">
                <h4>@Model.First().Level @Model.First().Name.Substring(0, Model.First().Name.IndexOf("voor"))</h4>
            </div>
            <div class="info-joboffer-left-bottom background-color-gray text-white">
                <h5>@Model.First().Company.Name , @Model.First().Residence</h5>
            </div>
        </div>

        <div class="home-right col-9">
            @foreach(var item in Model)
            {
                <div class="joboffer-right"> 
                    <img class="rounded-circle img" src=@Url.Content("~/" + item.LogoURL) height="100" width="100" alt="Logo" />
                    <div class="info-joboffer-right">
                        <h7>@item.Created</h7>
                        <h4>@item.Name</h4>
                        <p>@item.Description ...</p>
                    </div>
                </div>
            }
        </div>


        <table class="table col-8">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LogoURL)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Created)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
        @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LogoURL)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Level)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        @*<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |*@
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        @*<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>*@
                    </td>
                </tr>
        }
            </tbody>
        </table>
    </div>
</div>